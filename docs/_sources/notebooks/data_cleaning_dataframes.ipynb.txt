{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are numerous approaches of how to deal with daily tasks of cleaning data.\n",
    "\n",
    "For example (listing starts from most confusing way):\n",
    "\n",
    "* pandas way\n",
    "* slightly more advanced users might take advantage of the functional API\n",
    "* via pyjanitor package (inspired by the ease-of-use and expressiveness of the dplyr package of the R statistical language ecosystem)\n",
    "\n",
    "I always take the easy way out so we will focus on a consistent and expressive approach\n",
    "utilizing `pyjanitor`.\n",
    "\n",
    "So lets define it... `pyjanitor` is a Python implementation of the R package janitor, \n",
    "and provides a clean API for cleaning data.\n",
    "\n",
    "Interestingly we import pyjanitor as janitor for a reason.\n",
    "\n",
    "Afterwards we will inspect other methods two ways of doing things.\n",
    "\n",
    "I prefer having one way of doing common tasks rather then having a myriad of them which reduces fluency and introduces clutter.\n",
    "\n",
    "We are here to solve problems :)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tabular Dataset - NPD well data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "#pd.set_option('display.max_columns', None)  \n",
    "import janitor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"https://factpages.npd.no/ReportServer_npdpublic?/FactPages/TableView/wellbore_exploration_all&rs:Command=Render&rc:Toolbar=false&rc:Parameters=f&rs:Format=CSV&Top100=false&IpAddress=82.102.27.246&CultureCode=en\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wlbWellboreName</th>\n      <th>wlbWell</th>\n      <th>wlbDrillingOperator</th>\n      <th>wlbProductionLicence</th>\n      <th>wlbPurpose</th>\n      <th>wlbStatus</th>\n      <th>wlbContent</th>\n      <th>wlbWellType</th>\n      <th>wlbSubSea</th>\n      <th>wlbEntryDate</th>\n      <th>...</th>\n      <th>wlbNpdidWellbore</th>\n      <th>dscNpdidDiscovery</th>\n      <th>fldNpdidField</th>\n      <th>fclNpdidFacilityDrilling</th>\n      <th>wlbNpdidWellboreReclass</th>\n      <th>prlNpdidProductionLicence</th>\n      <th>wlbNpdidSiteSurvey</th>\n      <th>wlbDateUpdated</th>\n      <th>wlbDateUpdatedMax</th>\n      <th>datesyncNPD</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>1/2-1</td>\n      <td>Phillips Petroleum Norsk AS</td>\n      <td>143</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>20.03.1989</td>\n      <td>...</td>\n      <td>1382</td>\n      <td>43814.0</td>\n      <td>3437650.0</td>\n      <td>296245.0</td>\n      <td>0</td>\n      <td>21956.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>1/2-2</td>\n      <td>Paladin Resources Norge AS</td>\n      <td>143 CS</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL SHOWS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>14.12.2005</td>\n      <td>...</td>\n      <td>5192</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>278245.0</td>\n      <td>0</td>\n      <td>2424919.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>1/3-1</td>\n      <td>A/S Norske Shell</td>\n      <td>011</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>GAS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>06.07.1968</td>\n      <td>...</td>\n      <td>154</td>\n      <td>43820.0</td>\n      <td>NaN</td>\n      <td>288604.0</td>\n      <td>0</td>\n      <td>20844.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>1/3-2</td>\n      <td>A/S Norske Shell</td>\n      <td>011</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>DRY</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>14.05.1969</td>\n      <td>...</td>\n      <td>165</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>288847.0</td>\n      <td>0</td>\n      <td>20844.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>1/3-3</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>065</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>22.08.1982</td>\n      <td>...</td>\n      <td>87</td>\n      <td>43826.0</td>\n      <td>1028599.0</td>\n      <td>288334.0</td>\n      <td>0</td>\n      <td>21316.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 87 columns</p>\n</div>",
      "text/plain": "  wlbWellboreName wlbWell          wlbDrillingOperator wlbProductionLicence  \\\n0           1/2-1   1/2-1  Phillips Petroleum Norsk AS                 143    \n1           1/2-2   1/2-2   Paladin Resources Norge AS               143 CS   \n2           1/3-1   1/3-1             A/S Norske Shell                 011    \n3           1/3-2   1/3-2             A/S Norske Shell                 011    \n4           1/3-3   1/3-3       Elf Petroleum Norge AS                 065    \n\n  wlbPurpose wlbStatus wlbContent  wlbWellType wlbSubSea wlbEntryDate  ...  \\\n0    WILDCAT       P&A        OIL  EXPLORATION        NO   20.03.1989  ...   \n1    WILDCAT       P&A  OIL SHOWS  EXPLORATION        NO   14.12.2005  ...   \n2    WILDCAT       P&A        GAS  EXPLORATION        NO   06.07.1968  ...   \n3    WILDCAT       P&A        DRY  EXPLORATION        NO   14.05.1969  ...   \n4    WILDCAT       P&A        OIL  EXPLORATION        NO   22.08.1982  ...   \n\n  wlbNpdidWellbore dscNpdidDiscovery fldNpdidField fclNpdidFacilityDrilling  \\\n0             1382           43814.0     3437650.0                 296245.0   \n1             5192               NaN           NaN                 278245.0   \n2              154           43820.0           NaN                 288604.0   \n3              165               NaN           NaN                 288847.0   \n4               87           43826.0     1028599.0                 288334.0   \n\n  wlbNpdidWellboreReclass  prlNpdidProductionLicence wlbNpdidSiteSurvey  \\\n0                       0                    21956.0                NaN   \n1                       0                  2424919.0                NaN   \n2                       0                    20844.0                NaN   \n3                       0                    20844.0                NaN   \n4                       0                    21316.0                NaN   \n\n  wlbDateUpdated  wlbDateUpdatedMax  datesyncNPD  \n0     03.10.2019         03.10.2019   19.11.2019  \n1     03.10.2019         03.10.2019   19.11.2019  \n2     03.10.2019         03.10.2019   19.11.2019  \n3     03.10.2019         03.10.2019   19.11.2019  \n4     03.10.2019         03.10.2019   19.11.2019  \n\n[5 rows x 87 columns]"
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Cleaning the dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-20-5f25004e24f9>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-20-5f25004e24f9>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    Lets list our columns names:\u001b[0m\n\u001b[1;37m            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "Lets list our columns names:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "Index(['wlbWellboreName', 'wlbWell', 'wlbDrillingOperator',\n       'wlbProductionLicence', 'wlbPurpose', 'wlbStatus', 'wlbContent',\n       'wlbWellType', 'wlbSubSea', 'wlbEntryDate', 'wlbCompletionDate',\n       'wlbField', 'wlbDrillPermit', 'wlbDiscovery', 'wlbDiscoveryWellbore',\n       'wlbBottomHoleTemperature', 'wlbSiteSurvey', 'wlbSeismicLocation',\n       'wlbMaxInclation', 'wlbKellyBushElevation', 'wlbFinalVerticalDepth',\n       'wlbTotalDepth', 'wlbWaterDepth', 'wlbKickOffPoint', 'wlbAgeAtTd',\n       'wlbFormationAtTd', 'wlbMainArea', 'wlbDrillingFacility',\n       'wlbFacilityTypeDrilling', 'wlbDrillingFacilityFixedOrMoveable',\n       'wlbLicensingActivity', 'wlbMultilateral', 'wlbPurposePlanned',\n       'wlbEntryYear', 'wlbCompletionYear', 'wlbReclassFromWellbore',\n       'wlbReentryExplorationActivity', 'wlbPlotSymbol', 'wlbFormationWithHc1',\n       'wlbAgeWithHc1', 'wlbFormationWithHc2', 'wlbAgeWithHc2',\n       'wlbFormationWithHc3', 'wlbAgeWithHc3', 'wlbDrillingDays', 'wlbReentry',\n       'wlbLicenceTargetName', 'wlbPluggedAbandonDate', 'wlbPluggedDate',\n       'wlbGeodeticDatum', 'wlbNsDeg', 'wlbNsMin', 'wlbNsSec', 'wlbNsCode',\n       'wlbEwDeg', 'wlbEwMin', 'wlbEwSec', 'wlbEwCode', 'wlbNsDecDeg',\n       'wlbEwDesDeg', 'wlbNsUtm', 'wlbEwUtm', 'wlbUtmZone', 'wlbNamePart1',\n       'wlbNamePart2', 'wlbNamePart3', 'wlbNamePart4', 'wlbNamePart5',\n       'wlbNamePart6', 'wlbPressReleaseUrl', 'wlbFactPageUrl', 'wlbFactMapUrl',\n       'wlbDiskosWellboreType', 'wlbDiskosWellboreParent', 'wlbWdssQcDate',\n       'wlbReleasedDate', 'wlbDateReclass', 'wlbNpdidWellbore',\n       'dscNpdidDiscovery', 'fldNpdidField', 'fclNpdidFacilityDrilling',\n       'wlbNpdidWellboreReclass', 'prlNpdidProductionLicence',\n       'wlbNpdidSiteSurvey', 'wlbDateUpdated', 'wlbDateUpdatedMax',\n       'datesyncNPD'],\n      dtype='object')"
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### str_replace - replace something with something"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We need to clean our column names so we make are subsequent workflows on dataframes\n",
    "as easy as it can get.\n",
    "\n",
    "**It is important that we wrap our chains of methods into parantheses** (why?) \n",
    "The second approach would be to end each line with a backslash. I find the first\n",
    "approach more elegant so I will use it.\n",
    "\n",
    "Remove wlb, fld, fcl prefixes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.columns = (\n",
    "    df.columns\n",
    "        .str.replace(\"wlb\", \"\")\n",
    "        .str.replace(\"fld\", \"\")\n",
    "        .str.replace(\"fcl\", \"\")\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "Index(['WellboreName', 'Well', 'DrillingOperator', 'ProductionLicence',\n       'Purpose', 'Status', 'Content', 'WellType', 'SubSea', 'EntryDate',\n       'CompletionDate', 'Field', 'DrillPermit', 'Discovery',\n       'DiscoveryWellbore', 'BottomHoleTemperature', 'SiteSurvey',\n       'SeismicLocation', 'MaxInclation', 'KellyBushElevation',\n       'FinalVerticalDepth', 'TotalDepth', 'WaterDepth', 'KickOffPoint',\n       'AgeAtTd', 'FormationAtTd', 'MainArea', 'DrillingFacility',\n       'FacilityTypeDrilling', 'DrillingFacilityFixedOrMoveable',\n       'LicensingActivity', 'Multilateral', 'PurposePlanned', 'EntryYear',\n       'CompletionYear', 'ReclassFromWellbore', 'ReentryExplorationActivity',\n       'PlotSymbol', 'FormationWithHc1', 'AgeWithHc1', 'FormationWithHc2',\n       'AgeWithHc2', 'FormationWithHc3', 'AgeWithHc3', 'DrillingDays',\n       'Reentry', 'LicenceTargetName', 'PluggedAbandonDate', 'PluggedDate',\n       'GeodeticDatum', 'NsDeg', 'NsMin', 'NsSec', 'NsCode', 'EwDeg', 'EwMin',\n       'EwSec', 'EwCode', 'NsDecDeg', 'EwDesDeg', 'NsUtm', 'EwUtm', 'UtmZone',\n       'NamePart1', 'NamePart2', 'NamePart3', 'NamePart4', 'NamePart5',\n       'NamePart6', 'PressReleaseUrl', 'FactPageUrl', 'FactMapUrl',\n       'DiskosWellboreType', 'DiskosWellboreParent', 'WdssQcDate',\n       'ReleasedDate', 'DateReclass', 'NpdidWellbore', 'dscNpdidDiscovery',\n       'NpdidField', 'NpdidFacilityDrilling', 'NpdidWellboreReclass',\n       'prlNpdidProductionLicence', 'NpdidSiteSurvey', 'DateUpdated',\n       'DateUpdatedMax', 'datesyncNPD'],\n      dtype='object')"
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### clean_names (janitor module) - unification of column names"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Space out words by placing a snake between the words so it is nicer to look at the column names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = (\n",
    "    df.clean_names(case_type=\"snake\")\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "Index(['wellbore_name', 'well', 'drilling_operator', 'production_licence',\n       'purpose', 'status', 'content', 'well_type', 'sub_sea', 'entry_date',\n       'completion_date', 'field', 'drill_permit', 'discovery',\n       'discovery_wellbore', 'bottom_hole_temperature', 'site_survey',\n       'seismic_location', 'max_inclation', 'kelly_bush_elevation',\n       'final_vertical_depth', 'total_depth', 'water_depth', 'kick_off_point',\n       'age_at_td', 'formation_at_td', 'main_area', 'drilling_facility',\n       'facility_type_drilling', 'drilling_facility_fixed_or_moveable',\n       'licensing_activity', 'multilateral', 'purpose_planned', 'entry_year',\n       'completion_year', 'reclass_from_wellbore',\n       'reentry_exploration_activity', 'plot_symbol', 'formation_with_hc1',\n       'age_with_hc1', 'formation_with_hc2', 'age_with_hc2',\n       'formation_with_hc3', 'age_with_hc3', 'drilling_days', 'reentry',\n       'licence_target_name', 'plugged_abandon_date', 'plugged_date',\n       'geodetic_datum', 'ns_deg', 'ns_min', 'ns_sec', 'ns_code', 'ew_deg',\n       'ew_min', 'ew_sec', 'ew_code', 'ns_dec_deg', 'ew_des_deg', 'ns_utm',\n       'ew_utm', 'utm_zone', 'name_part1', 'name_part2', 'name_part3',\n       'name_part4', 'name_part5', 'name_part6', 'press_release_url',\n       'fact_page_url', 'fact_map_url', 'diskos_wellbore_type',\n       'diskos_wellbore_parent', 'wdss_qc_date', 'released_date',\n       'date_reclass', 'npdid_wellbore', 'dsc_npdid_discovery', 'npdid_field',\n       'npdid_facility_drilling', 'npdid_wellbore_reclass',\n       'prl_npdid_production_licence', 'npdid_site_survey', 'date_updated',\n       'date_updated_max', 'datesync_npd'],\n      dtype='object')"
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Select columns with regex  "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Select columns that start with *well* by applying regex pattern."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_selected = (df.filter(regex=\"^well\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>well</th>\n      <th>well_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>1/2-1</td>\n      <td>EXPLORATION</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>1/2-2</td>\n      <td>EXPLORATION</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>1/3-1</td>\n      <td>EXPLORATION</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>1/3-2</td>\n      <td>EXPLORATION</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>1/3-3</td>\n      <td>EXPLORATION</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "  wellbore_name   well    well_type\n0         1/2-1  1/2-1  EXPLORATION\n1         1/2-2  1/2-2  EXPLORATION\n2         1/3-1  1/3-1  EXPLORATION\n3         1/3-2  1/3-2  EXPLORATION\n4         1/3-3  1/3-3  EXPLORATION"
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_selected.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Select columns and query a dataframe "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You select columns in dataframe by using .filter function --- a bit non-inuitive since we use\n",
    "it to selec columns by a columns name, and we filter the columns by a condition by using .query function.\n",
    "\n",
    "Filter dataframe by the elements from the list that is a part of the query argument - a list of values. \n",
    "\n",
    "**REMEMBER SINGLE QUOTES WITHIN DOUBLE QUOTES.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>well_type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>EXPLORATION</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>7324/10-1</td>\n      <td>EXPLORATION</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "     wellbore_name    well_type\n0            1/2-1  EXPLORATION\n1916     7324/10-1  EXPLORATION"
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "  .filter(items=[\"wellbore_name\", \"well_type\"])\n",
    "  .query(\"wellbore_name in ['1/2-1', '7324/10-1']\")\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Query dataframe by multiple conditions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>purpose</th>\n      <th>total_depth</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>298</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>1971.0</td>\n    </tr>\n    <tr>\n      <td>788</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1890.0</td>\n    </tr>\n    <tr>\n      <td>1289</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1640.0</td>\n    </tr>\n    <tr>\n      <td>1537</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>1920.0</td>\n    </tr>\n    <tr>\n      <td>1830</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1033.0</td>\n    </tr>\n    <tr>\n      <td>1849</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1594.0</td>\n    </tr>\n    <tr>\n      <td>1852</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1780.0</td>\n    </tr>\n    <tr>\n      <td>1859</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1855.0</td>\n    </tr>\n    <tr>\n      <td>1897</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1500.0</td>\n    </tr>\n    <tr>\n      <td>1900</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1540.0</td>\n    </tr>\n    <tr>\n      <td>1906</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1090.0</td>\n    </tr>\n    <tr>\n      <td>1915</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1100.0</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1210.0</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1540.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "         drilling_operator  purpose  total_depth\n298       A/S Norske Shell  WILDCAT       1971.0\n788   Statoil Petroleum AS  WILDCAT       1890.0\n1289  Statoil Petroleum AS  WILDCAT       1640.0\n1537      A/S Norske Shell  WILDCAT       1920.0\n1830  Statoil Petroleum AS  WILDCAT       1033.0\n1849  Statoil Petroleum AS  WILDCAT       1594.0\n1852  Statoil Petroleum AS  WILDCAT       1780.0\n1859  Statoil Petroleum AS  WILDCAT       1855.0\n1897  Statoil Petroleum AS  WILDCAT       1500.0\n1900  Statoil Petroleum AS  WILDCAT       1540.0\n1906  Statoil Petroleum AS  WILDCAT       1090.0\n1915  Statoil Petroleum AS  WILDCAT       1100.0\n1918  Statoil Petroleum AS  WILDCAT       1210.0\n1920  Statoil Petroleum AS  WILDCAT       1540.0"
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "   .filter(items=[\"drilling_operator\", \"purpose\", \"total_depth\"]) \n",
    "   .query('drilling_operator in [\"A/S Norske Shell\", \"Statoil Petroleum AS\"] & \\\n",
    "           purpose in \"WILDCAT\" & \\\n",
    "           1000 < total_depth < 2000'))"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Query dataframe by a predefine list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "metadata": {},
   "outputs": [],
   "source": [
    "operators_top_10 = ['Norsk Hydro Produksjon AS',\n",
    " 'Statoil Petroleum AS',\n",
    " 'Saga Petroleum ASA',\n",
    " 'Lundin Norway AS',\n",
    " 'Esso Exploration and Production Norway A/S',\n",
    " 'A/S Norske Shell',\n",
    " 'Elf Petroleum Norge AS',\n",
    " 'Phillips Petroleum Company Norway',\n",
    " 'Statoil ASA (old)']"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "You can refer to variables in the environment by prefixing them with an â€˜@â€™ character like for example \n",
    "**@operators_top_10**, i.e.\n",
    "\n",
    ".query(\"drilling_operator == **@operators_top_10**\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>drilling_days</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>2</td>\n      <td>A/S Norske Shell</td>\n      <td>129</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>A/S Norske Shell</td>\n      <td>75</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>216</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>83</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>A/S Norske Shell</td>\n      <td>134</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "        drilling_operator  drilling_days\n2        A/S Norske Shell            129\n3        A/S Norske Shell             75\n4  Elf Petroleum Norge AS            216\n5  Elf Petroleum Norge AS             83\n6        A/S Norske Shell            134"
     },
     "execution_count": 188,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "    .query(\"drilling_operator == @operators_top_10\")\n",
    "    .filter(items=['drilling_operator', \"drilling_days\"])\n",
    "    .head()\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Sort dataframe by values in a column or columns"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 198,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-198-2e79a85416fa>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-198-2e79a85416fa>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    Sort by one column\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "Sort by one column:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>drilling_days</th>\n      <th>total_depth</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1257</td>\n      <td>Statoil ASA (old)</td>\n      <td>49</td>\n      <td>7928.0</td>\n    </tr>\n    <tr>\n      <td>1276</td>\n      <td>Statoil Petroleum AS</td>\n      <td>32</td>\n      <td>7811.0</td>\n    </tr>\n    <tr>\n      <td>1260</td>\n      <td>Statoil ASA (old)</td>\n      <td>27</td>\n      <td>7725.0</td>\n    </tr>\n    <tr>\n      <td>1258</td>\n      <td>Statoil ASA (old)</td>\n      <td>67</td>\n      <td>7594.0</td>\n    </tr>\n    <tr>\n      <td>293</td>\n      <td>Den norske stats oljeselskap a.s</td>\n      <td>203</td>\n      <td>7584.0</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1363</td>\n      <td>Equinor Energy AS</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <td>436</td>\n      <td>Lundin Norway AS</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <td>213</td>\n      <td>Repsol Exploration Norge AS</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <td>1002</td>\n      <td>Norsk Hydro Produksjon AS</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <td>1462</td>\n      <td>A/S Norske Shell</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 3 columns</p>\n</div>",
      "text/plain": "                     drilling_operator  drilling_days  total_depth\n1257                 Statoil ASA (old)             49       7928.0\n1276              Statoil Petroleum AS             32       7811.0\n1260                 Statoil ASA (old)             27       7725.0\n1258                 Statoil ASA (old)             67       7594.0\n293   Den norske stats oljeselskap a.s            203       7584.0\n...                                ...            ...          ...\n1363                 Equinor Energy AS              0          0.0\n436                   Lundin Norway AS              0          0.0\n213        Repsol Exploration Norge AS              0          0.0\n1002         Norsk Hydro Produksjon AS              0          0.0\n1462                  A/S Norske Shell              0          0.0\n\n[1921 rows x 3 columns]"
     },
     "execution_count": 192,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df.filter(items=['drilling_operator', \"drilling_days\", \"total_depth\"])\n",
    "    .sort_values(by=\"total_depth\", ascending=False)\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 197,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-197-f6f3deeabb0f>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-197-f6f3deeabb0f>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    Sort by multiple columns:\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "Sort by multiple columns:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>drilling_days</th>\n      <th>total_depth</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1478</td>\n      <td>Wintershall Norge ASA</td>\n      <td>112</td>\n      <td>4177.0</td>\n    </tr>\n    <tr>\n      <td>1447</td>\n      <td>Wintershall Norge ASA</td>\n      <td>87</td>\n      <td>4216.0</td>\n    </tr>\n    <tr>\n      <td>1368</td>\n      <td>Wintershall Norge ASA</td>\n      <td>66</td>\n      <td>3585.0</td>\n    </tr>\n    <tr>\n      <td>1366</td>\n      <td>Wintershall Norge ASA</td>\n      <td>55</td>\n      <td>2807.0</td>\n    </tr>\n    <tr>\n      <td>1317</td>\n      <td>Wintershall Norge ASA</td>\n      <td>47</td>\n      <td>3006.0</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1538</td>\n      <td>A/S Norske Shell</td>\n      <td>13</td>\n      <td>1800.0</td>\n    </tr>\n    <tr>\n      <td>1534</td>\n      <td>A/S Norske Shell</td>\n      <td>12</td>\n      <td>1804.0</td>\n    </tr>\n    <tr>\n      <td>1546</td>\n      <td>A/S Norske Shell</td>\n      <td>10</td>\n      <td>1805.0</td>\n    </tr>\n    <tr>\n      <td>961</td>\n      <td>A/S Norske Shell</td>\n      <td>9</td>\n      <td>5035.0</td>\n    </tr>\n    <tr>\n      <td>1462</td>\n      <td>A/S Norske Shell</td>\n      <td>0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 3 columns</p>\n</div>",
      "text/plain": "          drilling_operator  drilling_days  total_depth\n1478  Wintershall Norge ASA            112       4177.0\n1447  Wintershall Norge ASA             87       4216.0\n1368  Wintershall Norge ASA             66       3585.0\n1366  Wintershall Norge ASA             55       2807.0\n1317  Wintershall Norge ASA             47       3006.0\n...                     ...            ...          ...\n1538       A/S Norske Shell             13       1800.0\n1534       A/S Norske Shell             12       1804.0\n1546       A/S Norske Shell             10       1805.0\n961        A/S Norske Shell              9       5035.0\n1462       A/S Norske Shell              0          0.0\n\n[1921 rows x 3 columns]"
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df.filter(items=['drilling_operator', \"drilling_days\", \"total_depth\"])\n",
    "    .sort_values(by=[\"drilling_operator\", \"drilling_days\"], ascending=False)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    ".sort_values(\"entry_year\", ascending = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Rename column names"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Before:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>purpose</th>\n      <th>total_depth</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>Phillips Petroleum Norsk AS</td>\n      <td>WILDCAT</td>\n      <td>3574.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>Paladin Resources Norge AS</td>\n      <td>WILDCAT</td>\n      <td>3434.0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4877.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4297.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>WILDCAT</td>\n      <td>4876.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "             drilling_operator  purpose  total_depth\n0  Phillips Petroleum Norsk AS  WILDCAT       3574.0\n1   Paladin Resources Norge AS  WILDCAT       3434.0\n2             A/S Norske Shell  WILDCAT       4877.0\n3             A/S Norske Shell  WILDCAT       4297.0\n4       Elf Petroleum Norge AS  WILDCAT       4876.0"
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "   .filter(items=[\"drilling_operator\", \"purpose\", \"total_depth\"])\n",
    ").head()"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "After:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>drilling_operator</th>\n      <th>well_purpose</th>\n      <th>total_depth</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>Phillips Petroleum Norsk AS</td>\n      <td>WILDCAT</td>\n      <td>3574.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>Paladin Resources Norge AS</td>\n      <td>WILDCAT</td>\n      <td>3434.0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4877.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4297.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>WILDCAT</td>\n      <td>4876.0</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>Den norske stats oljeselskap a.s</td>\n      <td>WILDCAT</td>\n      <td>2919.0</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>2865.0</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1210.0</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>Equinor Energy AS</td>\n      <td>WILDCAT</td>\n      <td>4300.0</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1540.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 3 columns</p>\n</div>",
      "text/plain": "                     drilling_operator well_purpose  total_depth\n0          Phillips Petroleum Norsk AS      WILDCAT       3574.0\n1           Paladin Resources Norge AS      WILDCAT       3434.0\n2                     A/S Norske Shell      WILDCAT       4877.0\n3                     A/S Norske Shell      WILDCAT       4297.0\n4               Elf Petroleum Norge AS      WILDCAT       4876.0\n...                                ...          ...          ...\n1916  Den norske stats oljeselskap a.s      WILDCAT       2919.0\n1917              Statoil Petroleum AS      WILDCAT       2865.0\n1918              Statoil Petroleum AS      WILDCAT       1210.0\n1919                 Equinor Energy AS      WILDCAT       4300.0\n1920              Statoil Petroleum AS      WILDCAT       1540.0\n\n[1921 rows x 3 columns]"
     },
     "execution_count": 64,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "   .filter(items=[\"drilling_operator\", \"purpose\", \"total_depth\"])\n",
    "   .rename(columns={\"purpose\":\"well_purpose\"}) ##  \"old_name\":\"new_name\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Rename multiple columns by predefining a dictionary. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>DRILLING_COMPANY</th>\n      <th>WELL_PURPOSE</th>\n      <th>TOTAL_DEPTH_METERS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>Phillips Petroleum Norsk AS</td>\n      <td>WILDCAT</td>\n      <td>3574.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>Paladin Resources Norge AS</td>\n      <td>WILDCAT</td>\n      <td>3434.0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4877.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>A/S Norske Shell</td>\n      <td>WILDCAT</td>\n      <td>4297.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>WILDCAT</td>\n      <td>4876.0</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>Den norske stats oljeselskap a.s</td>\n      <td>WILDCAT</td>\n      <td>2919.0</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>2865.0</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1210.0</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>Equinor Energy AS</td>\n      <td>WILDCAT</td>\n      <td>4300.0</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>Statoil Petroleum AS</td>\n      <td>WILDCAT</td>\n      <td>1540.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 3 columns</p>\n</div>",
      "text/plain": "                      DRILLING_COMPANY WELL_PURPOSE  TOTAL_DEPTH_METERS\n0          Phillips Petroleum Norsk AS      WILDCAT              3574.0\n1           Paladin Resources Norge AS      WILDCAT              3434.0\n2                     A/S Norske Shell      WILDCAT              4877.0\n3                     A/S Norske Shell      WILDCAT              4297.0\n4               Elf Petroleum Norge AS      WILDCAT              4876.0\n...                                ...          ...                 ...\n1916  Den norske stats oljeselskap a.s      WILDCAT              2919.0\n1917              Statoil Petroleum AS      WILDCAT              2865.0\n1918              Statoil Petroleum AS      WILDCAT              1210.0\n1919                 Equinor Energy AS      WILDCAT              4300.0\n1920              Statoil Petroleum AS      WILDCAT              1540.0\n\n[1921 rows x 3 columns]"
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# d\n",
    "new_column_names = {\n",
    "    \"drilling_operator\" : \"DRILLING_COMPANY\", \n",
    "    \"purpose\" : \"WELL_PURPOSE\",\n",
    "    \"total_depth\" : \"TOTAL_DEPTH_METERS\"\n",
    "}\n",
    "\n",
    "(df\n",
    "   .filter(items=[\"drilling_operator\", \"purpose\", \"total_depth\"])\n",
    "   .rename(columns=new_column_names) ##  \"old_name\":\"new_name\"\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Calculate summary statistic (min, max, mean, count,...) per group"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-15-db0c3844587f>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-15-db0c3844587f>\"\u001b[1;36m, line \u001b[1;32m3\u001b[0m\n\u001b[1;33m    We see that well_bore name was silently dropped since it is a categorical column.\u001b[0m\n\u001b[1;37m         ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "What is the minimum and maximum total_depth grouped by completion_year and sorted by entry_year?\n",
    "\n",
    "We see that well_bore name was silently dropped since it is a categorical column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>entry_year</th>\n      <th>total_depth_min</th>\n      <th>total_depth_max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>2019</td>\n      <td>0.0</td>\n      <td>6068.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>2018</td>\n      <td>381.0</td>\n      <td>6100.0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>2017</td>\n      <td>508.0</td>\n      <td>7811.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>2016</td>\n      <td>488.0</td>\n      <td>7126.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>2015</td>\n      <td>840.0</td>\n      <td>5765.0</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>2014</td>\n      <td>1033.0</td>\n      <td>4889.0</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>2013</td>\n      <td>930.0</td>\n      <td>5634.0</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>2012</td>\n      <td>1640.0</td>\n      <td>5573.0</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>2011</td>\n      <td>1339.0</td>\n      <td>5672.0</td>\n    </tr>\n    <tr>\n      <td>9</td>\n      <td>2010</td>\n      <td>1178.0</td>\n      <td>5738.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "   entry_year  total_depth_min  total_depth_max\n0        2019              0.0           6068.0\n1        2018            381.0           6100.0\n2        2017            508.0           7811.0\n3        2016            488.0           7126.0\n4        2015            840.0           5765.0\n5        2014           1033.0           4889.0\n6        2013            930.0           5634.0\n7        2012           1640.0           5573.0\n8        2011           1339.0           5672.0\n9        2010           1178.0           5738.0"
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "  .filter(items=[\"wellbore_name\", \"entry_year\", \"total_depth\"])\n",
    "  .groupby(\"entry_year\")\n",
    "  .agg(\n",
    "    total_depth_min = pd.NamedAgg(column=\"total_depth\", aggfunc=\"min\"),\n",
    "    total_depth_max = pd.NamedAgg(column=\"total_depth\", aggfunc=\"max\")\n",
    "    )\n",
    "  .sort_values(\"entry_year\", ascending = False)\n",
    "  .reset_index()\n",
    "  ).head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "### What is a named function?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "def add_ten(x):\n",
    "    return x + 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "20"
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_ten(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### What is lambda or anonymus function?"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "In Python, lambda expressions (or lambda forms) are utilized to construct anonymous functions. To do so, you will use the lambda keyword (just as you use def to define normal functions).\n",
    "\n",
    "Every anonymous function you define in Python will have 3 essential parts:\n",
    "\n",
    "The lambda keyword.\n",
    "The parameters (or bound variables), and\n",
    "The function body.\n",
    "A lambda function can have any number of parameters, but the function body can only contain one expression.\n",
    "\n",
    "Moreover, a lambda is written in a single line of code and can also be invoked immediately. You will see all this in action in the upcoming examples."
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "The formal syntax to write a lambda function is as given below:\n",
    "\n",
    "lambda p1, p2: expression "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "add_ten = lambda x: x + 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "11"
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "add_ten(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Add a new calculated column"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 200,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-200-5f8f60de3f9e>, line 1)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-200-5f8f60de3f9e>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    depth_flag will be the new column that will have two values, if total_depth is larger or equal to 2000m,\u001b[0m\n\u001b[1;37m                  ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "`assign` method returns a new object with all original columns in addition to new ones. Existing columns that are re-assigned will be overwritten.\n",
    "\n",
    "`depth_flag` will be the new column that will have two values, if `total_depth` is larger or equal to 2000m, \n",
    "it will be classified as \"deep\", otherwise it will be classified as \"shallow\".\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>total_depth</th>\n      <th>utm_zone</th>\n      <th>depth_flag</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>3574.0</td>\n      <td>31</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>3434.0</td>\n      <td>31</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>4877.0</td>\n      <td>31</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>4297.0</td>\n      <td>31</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>4876.0</td>\n      <td>31</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>7324/10-1</td>\n      <td>2919.0</td>\n      <td>35</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>7325/1-1</td>\n      <td>2865.0</td>\n      <td>35</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>7325/4-1</td>\n      <td>1210.0</td>\n      <td>35</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>7335/3-1</td>\n      <td>4300.0</td>\n      <td>37</td>\n      <td>deep</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>7435/12-1</td>\n      <td>1540.0</td>\n      <td>37</td>\n      <td>deep</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 4 columns</p>\n</div>",
      "text/plain": "     wellbore_name  total_depth  utm_zone depth_flag\n0            1/2-1       3574.0        31       deep\n1            1/2-2       3434.0        31       deep\n2            1/3-1       4877.0        31       deep\n3            1/3-2       4297.0        31       deep\n4            1/3-3       4876.0        31       deep\n...            ...          ...       ...        ...\n1916     7324/10-1       2919.0        35       deep\n1917      7325/1-1       2865.0        35       deep\n1918      7325/4-1       1210.0        35       deep\n1919      7335/3-1       4300.0        37       deep\n1920     7435/12-1       1540.0        37       deep\n\n[1921 rows x 4 columns]"
     },
     "execution_count": 199,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "    .filter(items=[\"wellbore_name\", \"total_depth\", \"utm_zone\"])\n",
    "    .assign(\n",
    "        depth_flag=lambda x: np.where(x[\"total_depth\"] >= 1000, \"deep\", \"shallow\")\n",
    "        )  \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": 140,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Add calculated columns that are dependent on each other"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "In Python 3.6+, you can create multiple columns within the same assign where one of the columns depends on another one defined within the same assign.\n",
    "\n",
    "We will calculate two new columns:\n",
    "\n",
    "* `drilling_depth_flag` column which is when `total_depth` column has values larger or equal to 1000m, where they will be classified as \"deep\", and otherwise as \"shallow\"\n",
    "* `depth_age_flag` column is dependent on the previously calculated column `drilling_depth_flag`. Output of the column is \"deep_and_old\" if \"drilling_depth_flag\" column is \"deep\") AND if \"completion_year\" column is less and equal than 2010, otherwise it is \"shallow_and_new\"."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>total_depth</th>\n      <th>utm_zone</th>\n      <th>completion_year</th>\n      <th>drilling_depth_flag</th>\n      <th>depth_age_flag</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>3574.0</td>\n      <td>31</td>\n      <td>1989</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>3434.0</td>\n      <td>31</td>\n      <td>2006</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>4877.0</td>\n      <td>31</td>\n      <td>1968</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>4297.0</td>\n      <td>31</td>\n      <td>1969</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>4876.0</td>\n      <td>31</td>\n      <td>1983</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>7324/10-1</td>\n      <td>2919.0</td>\n      <td>35</td>\n      <td>1989</td>\n      <td>deep</td>\n      <td>deep_and_old</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>7325/1-1</td>\n      <td>2865.0</td>\n      <td>35</td>\n      <td>2014</td>\n      <td>deep</td>\n      <td>deep_and_new</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>7325/4-1</td>\n      <td>1210.0</td>\n      <td>35</td>\n      <td>2017</td>\n      <td>shallow</td>\n      <td>deep_and_new</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>7335/3-1</td>\n      <td>4300.0</td>\n      <td>37</td>\n      <td>2019</td>\n      <td>deep</td>\n      <td>deep_and_new</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>7435/12-1</td>\n      <td>1540.0</td>\n      <td>37</td>\n      <td>2017</td>\n      <td>shallow</td>\n      <td>deep_and_new</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 6 columns</p>\n</div>",
      "text/plain": "     wellbore_name  total_depth  utm_zone  completion_year  \\\n0            1/2-1       3574.0        31             1989   \n1            1/2-2       3434.0        31             2006   \n2            1/3-1       4877.0        31             1968   \n3            1/3-2       4297.0        31             1969   \n4            1/3-3       4876.0        31             1983   \n...            ...          ...       ...              ...   \n1916     7324/10-1       2919.0        35             1989   \n1917      7325/1-1       2865.0        35             2014   \n1918      7325/4-1       1210.0        35             2017   \n1919      7335/3-1       4300.0        37             2019   \n1920     7435/12-1       1540.0        37             2017   \n\n     drilling_depth_flag depth_age_flag  \n0                   deep   deep_and_old  \n1                   deep   deep_and_old  \n2                   deep   deep_and_old  \n3                   deep   deep_and_old  \n4                   deep   deep_and_old  \n...                  ...            ...  \n1916                deep   deep_and_old  \n1917                deep   deep_and_new  \n1918             shallow   deep_and_new  \n1919                deep   deep_and_new  \n1920             shallow   deep_and_new  \n\n[1921 rows x 6 columns]"
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df\n",
    "    .filter(items=[\"wellbore_name\", \"total_depth\", \"utm_zone\", \"completion_year\"])\n",
    "    .assign(\n",
    "        drilling_depth_flag=lambda x: np.where(x[\"total_depth\"] >= 1000, \"deep\", \"shallow\"),\n",
    "        depth_age_flag=lambda x: np.where(\n",
    "            (x[\"drilling_depth_flag\"] == \"deep\") & (x[\"completion_year\"] <= 2010),   # drilling_depth_flag has been created in previous step \n",
    "            \"deep_and_old\", \"deep_and_new\")\n",
    "        )  \n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Calculated column - define multiple cases with np.select"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "If you would like to caculate a column where, for example, each of the conditions will be re-mapped into a category, you can\n",
    "handle it with `np.select()`\n",
    "\n",
    "I would like to calculate a column `water_depth_category` has 4 categories, between 0 and 305 m, between 306 and 1524 m, between 1525 and 2133 m and more than 2134m.\n",
    "Each of these categories is classified into Shallow Water, Midwater, Deepwater and Ultra-Deepwater - respectively. Otherwise it is Unknown.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": "Shallow Water    1373\nMidwater          546\nDeepwater           2\nName: water_depth_category, dtype: int64"
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_multiple = (df\n",
    "    .filter(items=[\"wellbore_name\", \"total_depth\", \"water_depth\"])\n",
    "    .assign(\n",
    "        water_depth_category = lambda x: np.select(\n",
    "            condlist = [\n",
    "                x[\"water_depth\"].between(0, 305, inclusive=True),\n",
    "                x[\"water_depth\"].between(306, 1524, inclusive=True),\n",
    "                x[\"water_depth\"].between(1525, 2133, inclusive=True),\n",
    "                x[\"water_depth\"].between(2134, np.max(x[\"water_depth\"]), inclusive=True)\n",
    "                ],\n",
    "            choicelist = [ \n",
    "                \"Shallow Water\",\n",
    "                \"Midwater\",\n",
    "                \"Deepwater\",\n",
    "                \"Ultra-Deepwater\"\n",
    "            ],\n",
    "            default=\"Unknown\" \n",
    "        )\n",
    "    )\n",
    ")\n",
    "df_multiple[\"water_depth_category\"].value_counts()    \n",
    "#df_multiple.query(\"water_depth_category == 'Ultra Deep'\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>total_depth</th>\n      <th>water_depth</th>\n      <th>water_depth_category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1388</td>\n      <td>6204/10-2 R</td>\n      <td>2095.0</td>\n      <td>172.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>320</td>\n      <td>15/3-3</td>\n      <td>5115.0</td>\n      <td>109.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>541</td>\n      <td>16/7-11</td>\n      <td>2650.0</td>\n      <td>80.5</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>1425</td>\n      <td>6406/2-1</td>\n      <td>5292.0</td>\n      <td>278.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>1878</td>\n      <td>7223/5-1 A</td>\n      <td>0.0</td>\n      <td>332.0</td>\n      <td>Midwater</td>\n    </tr>\n    <tr>\n      <td>774</td>\n      <td>25/11-16</td>\n      <td>1945.0</td>\n      <td>120.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>518</td>\n      <td>16/4-8 S</td>\n      <td>2700.0</td>\n      <td>100.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>673</td>\n      <td>25/4-10 S</td>\n      <td>2912.0</td>\n      <td>123.0</td>\n      <td>Shallow Water</td>\n    </tr>\n    <tr>\n      <td>1345</td>\n      <td>35/11-10 A</td>\n      <td>3259.0</td>\n      <td>353.5</td>\n      <td>Midwater</td>\n    </tr>\n    <tr>\n      <td>1269</td>\n      <td>34/10-52 A</td>\n      <td>3520.0</td>\n      <td>134.0</td>\n      <td>Shallow Water</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "     wellbore_name  total_depth  water_depth water_depth_category\n1388   6204/10-2 R       2095.0        172.0        Shallow Water\n320         15/3-3       5115.0        109.0        Shallow Water\n541        16/7-11       2650.0         80.5        Shallow Water\n1425      6406/2-1       5292.0        278.0        Shallow Water\n1878    7223/5-1 A          0.0        332.0             Midwater\n774       25/11-16       1945.0        120.0        Shallow Water\n518       16/4-8 S       2700.0        100.0        Shallow Water\n673      25/4-10 S       2912.0        123.0        Shallow Water\n1345    35/11-10 A       3259.0        353.5             Midwater\n1269    34/10-52 A       3520.0        134.0        Shallow Water"
     },
     "execution_count": 223,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_multiple.sample(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Converting columns to date and time, and calculating difference"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 308,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>well</th>\n      <th>entry_date</th>\n      <th>completion_date</th>\n      <th>days_of_drilling</th>\n      <th>days_of_drilling_int</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>1989-03-20</td>\n      <td>1989-04-06</td>\n      <td>17 days</td>\n      <td>17.0</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>2005-12-14</td>\n      <td>2006-02-02</td>\n      <td>50 days</td>\n      <td>50.0</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>1968-06-07</td>\n      <td>1968-11-11</td>\n      <td>157 days</td>\n      <td>157.0</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>1969-05-14</td>\n      <td>1969-07-27</td>\n      <td>74 days</td>\n      <td>74.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>1982-08-22</td>\n      <td>1983-03-24</td>\n      <td>214 days</td>\n      <td>214.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>",
      "text/plain": "    well entry_date completion_date days_of_drilling  days_of_drilling_int\n0  1/2-1 1989-03-20      1989-04-06          17 days                  17.0\n1  1/2-2 2005-12-14      2006-02-02          50 days                  50.0\n2  1/3-1 1968-06-07      1968-11-11         157 days                 157.0\n3  1/3-2 1969-05-14      1969-07-27          74 days                  74.0\n4  1/3-3 1982-08-22      1983-03-24         214 days                 214.0"
     },
     "execution_count": 308,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns\n",
    "\n",
    "df_days = (df\n",
    "    .filter(items = ['well', 'entry_date','completion_date'])\n",
    "    .assign(\n",
    "        entry_date=pd.to_datetime(df['entry_date']),\n",
    "        completion_date=pd.to_datetime(df['completion_date']),\n",
    "        days_of_drilling = lambda x: x[\"completion_date\"] - x[\"entry_date\"],\n",
    "        days_of_drilling_int = df_days[\"days_of_drilling\"].dt.days\n",
    "        )\n",
    "    )\n",
    "df_days.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 263,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>well</th>\n      <th>drilling_operator</th>\n      <th>production_licence</th>\n      <th>purpose</th>\n      <th>status</th>\n      <th>content</th>\n      <th>well_type</th>\n      <th>sub_sea</th>\n      <th>entry_date</th>\n      <th>...</th>\n      <th>npdid_wellbore</th>\n      <th>dsc_npdid_discovery</th>\n      <th>npdid_field</th>\n      <th>npdid_facility_drilling</th>\n      <th>npdid_wellbore_reclass</th>\n      <th>prl_npdid_production_licence</th>\n      <th>npdid_site_survey</th>\n      <th>date_updated</th>\n      <th>date_updated_max</th>\n      <th>datesync_npd</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>1/2-1</td>\n      <td>Phillips Petroleum Norsk AS</td>\n      <td>143</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>20.03.1989</td>\n      <td>...</td>\n      <td>1382</td>\n      <td>43814.0</td>\n      <td>3437650.0</td>\n      <td>296245.0</td>\n      <td>0</td>\n      <td>21956.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>1/2-2</td>\n      <td>Paladin Resources Norge AS</td>\n      <td>143 CS</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL SHOWS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>14.12.2005</td>\n      <td>...</td>\n      <td>5192</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>278245.0</td>\n      <td>0</td>\n      <td>2424919.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>1/3-1</td>\n      <td>A/S Norske Shell</td>\n      <td>011</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>GAS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>06.07.1968</td>\n      <td>...</td>\n      <td>154</td>\n      <td>43820.0</td>\n      <td>NaN</td>\n      <td>288604.0</td>\n      <td>0</td>\n      <td>20844.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-2</td>\n      <td>1/3-2</td>\n      <td>A/S Norske Shell</td>\n      <td>011</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>DRY</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>14.05.1969</td>\n      <td>...</td>\n      <td>165</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>288847.0</td>\n      <td>0</td>\n      <td>20844.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-3</td>\n      <td>1/3-3</td>\n      <td>Elf Petroleum Norge AS</td>\n      <td>065</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>22.08.1982</td>\n      <td>...</td>\n      <td>87</td>\n      <td>43826.0</td>\n      <td>1028599.0</td>\n      <td>288334.0</td>\n      <td>0</td>\n      <td>21316.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>7324/10-1</td>\n      <td>7324/10-1</td>\n      <td>Den norske stats oljeselskap a.s</td>\n      <td>162</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>SHOWS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>03.06.1989</td>\n      <td>...</td>\n      <td>1411</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>294382.0</td>\n      <td>0</td>\n      <td>22108.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>7325/1-1</td>\n      <td>7325/1-1</td>\n      <td>Statoil Petroleum AS</td>\n      <td>615</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>GAS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>23.06.2014</td>\n      <td>...</td>\n      <td>7501</td>\n      <td>24689817.0</td>\n      <td>NaN</td>\n      <td>404201.0</td>\n      <td>0</td>\n      <td>20429544.0</td>\n      <td>NaN</td>\n      <td>03.10.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>7325/4-1</td>\n      <td>7325/4-1</td>\n      <td>Statoil Petroleum AS</td>\n      <td>855</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>OIL/GAS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>19.07.2017</td>\n      <td>...</td>\n      <td>8211</td>\n      <td>29469097.0</td>\n      <td>NaN</td>\n      <td>439972.0</td>\n      <td>0</td>\n      <td>28168828.0</td>\n      <td>NaN</td>\n      <td>13.11.2019</td>\n      <td>13.11.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>7335/3-1</td>\n      <td>7335/3-1</td>\n      <td>Equinor Energy AS</td>\n      <td>859</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>DRY</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>13.05.2019</td>\n      <td>...</td>\n      <td>8735</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>415836.0</td>\n      <td>0</td>\n      <td>28169055.0</td>\n      <td>NaN</td>\n      <td>17.10.2019</td>\n      <td>NaN</td>\n      <td>19.11.2019</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>7435/12-1</td>\n      <td>7435/12-1</td>\n      <td>Statoil Petroleum AS</td>\n      <td>859</td>\n      <td>WILDCAT</td>\n      <td>P&amp;A</td>\n      <td>GAS</td>\n      <td>EXPLORATION</td>\n      <td>NO</td>\n      <td>09.08.2017</td>\n      <td>...</td>\n      <td>8228</td>\n      <td>29491696.0</td>\n      <td>NaN</td>\n      <td>439972.0</td>\n      <td>0</td>\n      <td>28169055.0</td>\n      <td>NaN</td>\n      <td>01.11.2019</td>\n      <td>03.10.2019</td>\n      <td>19.11.2019</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 87 columns</p>\n</div>",
      "text/plain": "     wellbore_name       well                 drilling_operator  \\\n0            1/2-1      1/2-1       Phillips Petroleum Norsk AS   \n1            1/2-2      1/2-2        Paladin Resources Norge AS   \n2            1/3-1      1/3-1                  A/S Norske Shell   \n3            1/3-2      1/3-2                  A/S Norske Shell   \n4            1/3-3      1/3-3            Elf Petroleum Norge AS   \n...            ...        ...                               ...   \n1916     7324/10-1  7324/10-1  Den norske stats oljeselskap a.s   \n1917      7325/1-1   7325/1-1              Statoil Petroleum AS   \n1918      7325/4-1   7325/4-1              Statoil Petroleum AS   \n1919      7335/3-1   7335/3-1                 Equinor Energy AS   \n1920     7435/12-1  7435/12-1              Statoil Petroleum AS   \n\n     production_licence  purpose status    content    well_type sub_sea  \\\n0                  143   WILDCAT    P&A        OIL  EXPLORATION      NO   \n1                143 CS  WILDCAT    P&A  OIL SHOWS  EXPLORATION      NO   \n2                  011   WILDCAT    P&A        GAS  EXPLORATION      NO   \n3                  011   WILDCAT    P&A        DRY  EXPLORATION      NO   \n4                  065   WILDCAT    P&A        OIL  EXPLORATION      NO   \n...                 ...      ...    ...        ...          ...     ...   \n1916               162   WILDCAT    P&A      SHOWS  EXPLORATION      NO   \n1917               615   WILDCAT    P&A        GAS  EXPLORATION      NO   \n1918               855   WILDCAT    P&A    OIL/GAS  EXPLORATION      NO   \n1919               859   WILDCAT    P&A        DRY  EXPLORATION      NO   \n1920               859   WILDCAT    P&A        GAS  EXPLORATION      NO   \n\n      entry_date  ... npdid_wellbore dsc_npdid_discovery npdid_field  \\\n0     20.03.1989  ...           1382             43814.0   3437650.0   \n1     14.12.2005  ...           5192                 NaN         NaN   \n2     06.07.1968  ...            154             43820.0         NaN   \n3     14.05.1969  ...            165                 NaN         NaN   \n4     22.08.1982  ...             87             43826.0   1028599.0   \n...          ...  ...            ...                 ...         ...   \n1916  03.06.1989  ...           1411                 NaN         NaN   \n1917  23.06.2014  ...           7501          24689817.0         NaN   \n1918  19.07.2017  ...           8211          29469097.0         NaN   \n1919  13.05.2019  ...           8735                 NaN         NaN   \n1920  09.08.2017  ...           8228          29491696.0         NaN   \n\n     npdid_facility_drilling npdid_wellbore_reclass  \\\n0                   296245.0                      0   \n1                   278245.0                      0   \n2                   288604.0                      0   \n3                   288847.0                      0   \n4                   288334.0                      0   \n...                      ...                    ...   \n1916                294382.0                      0   \n1917                404201.0                      0   \n1918                439972.0                      0   \n1919                415836.0                      0   \n1920                439972.0                      0   \n\n      prl_npdid_production_licence npdid_site_survey date_updated  \\\n0                          21956.0               NaN   03.10.2019   \n1                        2424919.0               NaN   03.10.2019   \n2                          20844.0               NaN   03.10.2019   \n3                          20844.0               NaN   03.10.2019   \n4                          21316.0               NaN   03.10.2019   \n...                            ...               ...          ...   \n1916                       22108.0               NaN   03.10.2019   \n1917                    20429544.0               NaN   03.10.2019   \n1918                    28168828.0               NaN   13.11.2019   \n1919                    28169055.0               NaN   17.10.2019   \n1920                    28169055.0               NaN   01.11.2019   \n\n      date_updated_max  datesync_npd  \n0           03.10.2019    19.11.2019  \n1           03.10.2019    19.11.2019  \n2           03.10.2019    19.11.2019  \n3           03.10.2019    19.11.2019  \n4           03.10.2019    19.11.2019  \n...                ...           ...  \n1916        03.10.2019    19.11.2019  \n1917        03.10.2019    19.11.2019  \n1918        13.11.2019    19.11.2019  \n1919               NaN    19.11.2019  \n1920        03.10.2019    19.11.2019  \n\n[1921 rows x 87 columns]"
     },
     "execution_count": 263,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### pivot_table from long to wide dataframe format"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Letâ€™s use the pivot method to reshape this data so that the `purpose` of the wells become the columns and the `water_depth` becomes the values."
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Guidance â€” Consider using only pivot_table and not pivot.\n",
    "\n",
    "pivot_table can accomplish all of what pivot can do. In the case that you do not need to perform an aggregation, you still must provide an aggregation function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 316,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>purpose</th>\n      <th>wellbore_name</th>\n      <th>APPRAISAL</th>\n      <th>WILDCAT</th>\n      <th>WILDCAT-CCS</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>1/2-1</td>\n      <td>NaN</td>\n      <td>72.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1/2-2</td>\n      <td>NaN</td>\n      <td>74.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>1/3-1</td>\n      <td>NaN</td>\n      <td>71.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>1/3-10</td>\n      <td>72.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-10 A</td>\n      <td>72.0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>1916</td>\n      <td>9/4-2</td>\n      <td>NaN</td>\n      <td>70.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>1917</td>\n      <td>9/4-3</td>\n      <td>NaN</td>\n      <td>72.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>1918</td>\n      <td>9/4-4</td>\n      <td>NaN</td>\n      <td>78.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>1919</td>\n      <td>9/4-5</td>\n      <td>NaN</td>\n      <td>77.0</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <td>1920</td>\n      <td>9/8-1</td>\n      <td>NaN</td>\n      <td>68.0</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 4 columns</p>\n</div>",
      "text/plain": "purpose wellbore_name  APPRAISAL  WILDCAT  WILDCAT-CCS\n0               1/2-1        NaN     72.0          NaN\n1               1/2-2        NaN     74.0          NaN\n2               1/3-1        NaN     71.0          NaN\n3              1/3-10       72.0      NaN          NaN\n4            1/3-10 A       72.0      NaN          NaN\n...               ...        ...      ...          ...\n1916            9/4-2        NaN     70.0          NaN\n1917            9/4-3        NaN     72.0          NaN\n1918            9/4-4        NaN     78.0          NaN\n1919            9/4-5        NaN     77.0          NaN\n1920            9/8-1        NaN     68.0          NaN\n\n[1921 rows x 4 columns]"
     },
     "execution_count": 316,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_pivoted = (df\n",
    "    .filter(items=[\"wellbore_name\", \"purpose\", \"water_depth\"])\n",
    "    .pivot_table(\n",
    "        index=\"wellbore_name\",\n",
    "        columns=\"purpose\",\n",
    "        values=\"water_depth\",\n",
    "        aggfunc=\"mean\"\n",
    "    )\n",
    "    .reset_index()\n",
    "    #.filter(items=[\"wellbore_name\", \"APPRAISAL\", \"WILDCAT\", \"WILDCAT-CCS\"])\n",
    "    )\n",
    "df_pivoted"
   ]
  },
  {
   "cell_type": "markdown",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "### Melt from wide to long dataframe format"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 319,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>wellbore_name</th>\n      <th>purpose</th>\n      <th>value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>3</td>\n      <td>1/3-10</td>\n      <td>APPRAISAL</td>\n      <td>72.0</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>1/3-10 A</td>\n      <td>APPRAISAL</td>\n      <td>72.0</td>\n    </tr>\n    <tr>\n      <td>12</td>\n      <td>1/3-7</td>\n      <td>APPRAISAL</td>\n      <td>72.0</td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td>1/3-9 S</td>\n      <td>APPRAISAL</td>\n      <td>68.0</td>\n    </tr>\n    <tr>\n      <td>22</td>\n      <td>1/6-3</td>\n      <td>APPRAISAL</td>\n      <td>69.0</td>\n    </tr>\n    <tr>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <td>3838</td>\n      <td>9/4-3</td>\n      <td>WILDCAT</td>\n      <td>72.0</td>\n    </tr>\n    <tr>\n      <td>3839</td>\n      <td>9/4-4</td>\n      <td>WILDCAT</td>\n      <td>78.0</td>\n    </tr>\n    <tr>\n      <td>3840</td>\n      <td>9/4-5</td>\n      <td>WILDCAT</td>\n      <td>77.0</td>\n    </tr>\n    <tr>\n      <td>3841</td>\n      <td>9/8-1</td>\n      <td>WILDCAT</td>\n      <td>68.0</td>\n    </tr>\n    <tr>\n      <td>4760</td>\n      <td>31/5-7</td>\n      <td>WILDCAT-CCS</td>\n      <td>307.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>1921 rows Ã— 3 columns</p>\n</div>",
      "text/plain": "     wellbore_name      purpose  value\n3           1/3-10    APPRAISAL   72.0\n4         1/3-10 A    APPRAISAL   72.0\n12           1/3-7    APPRAISAL   72.0\n14         1/3-9 S    APPRAISAL   68.0\n22           1/6-3    APPRAISAL   69.0\n...            ...          ...    ...\n3838         9/4-3      WILDCAT   72.0\n3839         9/4-4      WILDCAT   78.0\n3840         9/4-5      WILDCAT   77.0\n3841         9/8-1      WILDCAT   68.0\n4760        31/5-7  WILDCAT-CCS  307.0\n\n[1921 rows x 3 columns]"
     },
     "execution_count": 319,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "(df_pivoted\n",
    "    .melt(\n",
    "    id_vars='wellbore_name', \n",
    "    value_vars=['APPRAISAL', 'WILDCAT', 'WILDCAT-CCS']\n",
    "    )\n",
    "    .dropna(subset=[\"value\"])\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}